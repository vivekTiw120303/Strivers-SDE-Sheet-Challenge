#include <bits/stdc++.h> 

void merge(vector<int>&arr, int low, int mid, int high, int &ans)
{
	int i=low, j=mid+1;

	while(i<=mid && j<=high)
	{
		if(arr[i]>2*arr[j]){
			ans+=(mid-i+1);
			j++;
		}
		else{
			i++;
		}
	}

	i=low, j=mid+1;
	int k=0;
	vector<int>v(high-low+1);

	while(i<=mid && j<=high)
	{
		if(arr[i]<arr[j]) v[k++]=arr[i++];
		else v[k++]=arr[j++];
	}
	while(i<=mid) v[k++]=arr[i++];
	while(j<=high) v[k++]=arr[j++];

	j=low;
	for(int i=0;i<v.size();i++){
		arr[j++]=v[i];
	}
}

void mergeSort(vector<int>&arr, int low, int high, int &ans)
{
	if(low>=high) return;

	int mid=low+(high-low)/2;
	mergeSort(arr,low,mid,ans);
	mergeSort(arr,mid+1,high,ans);
	merge(arr,low,mid,high,ans);
}

int reversePairs(vector<int> &arr, int n){
	int ans=0;
	mergeSort(arr,0,n-1,ans);
	return ans;
}
