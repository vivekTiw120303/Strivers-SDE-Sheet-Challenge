#include<bits/stdc++.h>

int memo(int i1, int i2, string &s, string &t, vector<vector<int>>&dp)
{
	if(i1<0 || i2<0)
	{
		return 0;
	}
	if(dp[i1][i2]!=-1)
	{
		return dp[i1][i2];
	}

	if(s[i1]==t[i2])
	{
		return dp[i1][i2] = 1+memo(i1-1,i2-1,s,t,dp);
	}
	return dp[i1][i2]=max(memo(i1-1,i2,s,t,dp), memo(i1,i2-1,s,t,dp));
}

int lcs(string s, string t)
{
	int n1=s.size(), n2=t.size();
	vector<vector<int>>dp(n1+1, vector<int>(n2+1,-1));
	return memo(n1-1,n2-1,s,t,dp);
}
