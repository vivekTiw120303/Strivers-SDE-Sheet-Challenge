#include <bits/stdc++.h> 

// bool ans=false;

int memo(int i, int k, vector<int>&arr, vector<vector<int>>&dp)
{
    if(k==0) return 1;

    if(i==0)
    {
        return arr[i]==k;
    }
    if(dp[i][k]!=-1)
    {
        return dp[i][k]!=0;
    }

    int notTake=memo(i-1,k,arr,dp);
    if(notTake!=0) return dp[i][k]=1;

    int take=0;
    if(arr[i]<=k)
    {
        take=memo(i-1,k-arr[i],arr,dp);
    }

    return dp[i][k] = take;
}

bool subsetSumToK(int n, int k, vector<int> &arr) {
    vector<vector<int>>dp(n, vector<int>(k+1,-1));
    return memo(n-1,k,arr,dp);;
}
