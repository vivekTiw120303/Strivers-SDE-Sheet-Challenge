#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    if(!root) return {};

    map<int, vector<int> >nodes;
    queue<pair<TreeNode<int>*, int>>q;
    q.push({root,0});
    nodes[0].push_back(root->data);

    while(!q.empty())
    {
        auto it=q.front();
        q.pop();
        TreeNode<int>* node=it.first;
        int x=it.second;

        if(node->left)
        {
            q.push({node->left,x-1});
            nodes[x-1].push_back(node->left->data);
        }
        if(node->right)
        {
            q.push({node->right, x+1});
            nodes[x+1].push_back(node->right->data);
        }
    }

    vector<int>ans;

    for(auto i:nodes)
    {
        for(auto j:i.second)
        {
            ans.push_back(j);
        }
    }

    return ans;
}
