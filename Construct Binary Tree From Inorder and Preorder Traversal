#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

int find_pos(vector<int>&inorder, int val, int inStart, int inEnd)
{
    for(int i=inStart;i<=inEnd;i++)
    {
        if(inorder[i]==val)
        {
            return i;
        }
    }
    return -1;
}

TreeNode<int>* BuildTree(vector<int>&preorder, vector<int>&inorder, int n, int &preIndex, int inStart, int inEnd)
{
    if(inStart>inEnd || preIndex>=n)
    {
        return NULL;
    }

    int val=preorder[preIndex++];
    TreeNode<int>* node= new TreeNode<int>(val);
    int ind=find_pos(inorder,val,inStart,inEnd);

    node->left=BuildTree(preorder,inorder,n,preIndex,inStart,ind-1);
    node->right=BuildTree(preorder,inorder,n,preIndex,ind+1,inEnd);
    return node;
}

TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
    int preIndex=0;
	return BuildTree(preorder,inorder,preorder.size(),preIndex,0,preorder.size()-1);
}
