#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    if(!root) return {};

    stack<pair<BinaryTreeNode<int>*,int>>st;
    st.push({root,1});
    vector<int>preOrder,inOrder,postOrder;

    while(!st.empty())
    {
        auto it=st.top();
        st.pop();
        BinaryTreeNode<int>* node=it.first;
        int pos=it.second;

        if(pos==1)
        {
            preOrder.push_back(node->data);
            st.push({node,2});
            if(node->left!=NULL)
            {
                st.push({node->left,1});
            }
        }
        else if(pos==2)
        {
            inOrder.push_back(node->data);
            st.push({node,3});
            if(node->right!=NULL)
            {
                st.push({node->right,1});
            }
        }
        else
        {
            postOrder.push_back(node->data);
        }
    }

    return {inOrder,preOrder,postOrder};
}
