#include <bits/stdc++.h> 

void merge(long long *arr, int low, int mid, int high, long long &ans)
{
    vector<long long>v(high-low+1);
    int i=low, j=mid+1, k=0;

    while(i<=mid && j<=high)
    {
        if(arr[i]<=arr[j]){
            v[k++]=arr[i++];
        }
        else{
            ans+=(mid-i+1);
            v[k++]=arr[j++];
        }
    }

    while(i<=mid) v[k++]=arr[i++];
    while(j<=high) v[k++]=arr[j++];

    j=low;
    for(int i=0;i<v.size();i++){
        arr[j++]=v[i];
    }
}

void mergeSort(long long *arr, int low, int high, long long &ans)
{
    if(low>=high) return;

    int mid=low+(high-low)/2;
    mergeSort(arr,low,mid,ans);
    mergeSort(arr,mid+1,high,ans);
    merge(arr,low,mid,high,ans);
}

long long getInversions(long long *arr, int n){
    long long ans=0;
    mergeSort(arr,0,n-1,ans);
    return ans;
}
