#include <bits/stdc++.h> 
vector<int> dijkstra(vector<vector<int>> &vec, int V, int E, int src) {
    vector<pair<int,int>>adj[V+1];
    for(int i=0;i<E;i++)
    {
        int u=vec[i][0], v=vec[i][1], wt=vec[i][2];
        adj[u].push_back({v,wt});
        adj[v].push_back({u,wt});       
    }

    vector<int>dist(V,INT_MAX);
    priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>> >pq;
    pq.push({0,src});
    dist[src]=0;
    
    while(!pq.empty())
    {
        int node=pq.top().second;
        int d=pq.top().first;
        pq.pop();

        for(auto it:adj[node])
        {
            int adjNode=it.first;
            int adjWeight=it.second;

            if(adjWeight+d < dist[adjNode])
            {
                dist[adjNode]=adjWeight+d;
                pq.push({dist[adjNode],adjNode});
            }
        }
    }
    return dist;
}
