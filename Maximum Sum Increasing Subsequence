#include <bits/stdc++.h> 

int memo(int i, int prev, vector<int>&rack, vector<vector<int>>&dp)
{
	if(i==rack.size())
	{
		return 0;
	}
	if(dp[i][prev+1]!=-1)
	{
		return dp[i][prev+1];
	}

	int take=0;
	if(prev==-1 || rack[i]>rack[prev])
	{
		take=rack[i]+memo(i+1,i,rack,dp);
	}
	int notTake = memo(i+1,prev,rack,dp);

	return dp[i][prev+1] = max(take,notTake);
}

int maxIncreasingDumbbellsSum(vector<int> &rack, int n)
{
	vector<vector<int>>dp(n, vector<int>(n+1,-1));
	return memo(0,-1,rack,dp);
}
