#include<bits/stdc++.h>

bool check(int r, int c, int n, int m)
{
   return r>=0 && c>=0 && r<n && c<m;
}

void bfs(int x, int y, int** arr, int n, int m, vector<vector<int>>&vis)
{
   queue<pair<int,int>>q;
   q.push({x,y});
   vis[x][y]=1;

   while(!q.empty())
   {
      int row=q.front().first;
      int col=q.front().second;
      q.pop();

      for(int i=-1;i<=1;i++)
      {
         for(int j=-1;j<=1;j++)
         {
            int r=row+i;
            int c=col+j;

            if(check(r,c,n,m) && !vis[r][c] && arr[r][c]==1)
            {
               vis[r][c]=1;
               q.push({r,c});
            }
         }
      }
   }
}

int getTotalIslands(int** arr, int n, int m)
{
   int cnt=0;
   vector<vector<int>>vis(n, vector<int>(m,0));
   for(int i=0;i<n;i++)
   {
      for(int j=0;j<m;j++)
      {
         if(arr[i][j]==1 && !vis[i][j])
         {
            cnt++;
            bfs(i,j,arr,n,m,vis);
         }
      }
   }
   return cnt;
}
