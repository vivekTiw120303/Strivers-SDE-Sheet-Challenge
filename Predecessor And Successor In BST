#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/

int findCeil(BinaryTreeNode<int> *root, int x){
    int ans=-1;
    while(root)
    {
        if(root->data>x)
        {
            ans=root->data;
            root=root->left;
        }
        else
        {
            root=root->right;
        }
    }
    return ans;
}

int floorInBST(BinaryTreeNode<int> * root, int x)
{
    int ans=-1;
    while(root)
    {
        if(root->data<x)
        {
            ans=max(ans,root->data);
            root=root->right;
        }
        else
        {
            root=root->left;
        }
    }
    return ans;
}

pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    if(!root)
    {
        return {NULL, root->right->data};
    }

    int pre=floorInBST(root,key);
    int suc=findCeil(root,key);

    return {pre,suc};
}
