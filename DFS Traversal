#include <bits/stdc++.h>

void dfs(int node, vector<int>adj[], vector<int>&vis, vector<int>&ds)
{
    ds.push_back(node);
    vis[node]=1;
    for(auto it:adj[node])
    {
        if(!vis[it])
        {
            dfs(it,adj,vis,ds);
        }
    }
}

vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    vector<int>adj[V+1];
    for(int i=0;i<E;i++)
    {
        int u=edges[i][0], v=edges[i][1];
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    vector<int>vis(V,0);
    vector<vector<int>>ans;
    for(int i=0;i<V;i++)
    {
        if(!vis[i])
        {
            vector<int>temp;
            dfs(i,adj,vis,temp);
            ans.push_back(temp);
        }
    }
    return ans;
}
